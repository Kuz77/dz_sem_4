# Задача 22: Даны два неупорядоченных набора целых чисел (может быть, с
# повторениями). Выдать без повторений в порядке возрастания все те числа, которые
# встречаются в обоих наборах.
# Пользователь вводит 2 числа. n - кол-во элементов первого множества. m - кол-во
# элементов второго множества. Затем пользователь вводит сами элементы множеств.

# 11 6
# 2 4 6 8 10 12 10 8 6 4 2
# 3 6 9 12 15 18
# 6 12

import random
n = int(input("Введите размер списка 1: "))

numbers1 = []

for i in range(n):
    number = random.randint(0, 20)
    numbers1.append(number)

print(numbers1)
numbers1set = set(numbers1)
print(numbers1set)


m = int(input("Введите размер списка 2: "))

numbers2 = []

for i in range(m):
    number = random.randint(0, 20)
    numbers2.append(number)

print(numbers2)
numbers2set = set(numbers2)
print(numbers2set)
numbers3set = numbers1set.intersection(numbers2set)
print(sorted(numbers3set))



# Задача 24: В фермерском хозяйстве в Карелии выращивают чернику. Она растет на
# круглой грядке, причем кусты высажены только по окружности. Таким образом, у
# каждого куста есть ровно два соседних. Всего на грядке растет N кустов.
# Эти кусты обладают разной урожайностью, поэтому ко времени сбора на них
# выросло различное число ягод – на i-ом кусте выросло ai
#  ягод.
# В этом фермерском хозяйстве внедрена система автоматического сбора черники.
# Эта система состоит из управляющего модуля и нескольких собирающих модулей.
# Собирающий модуль за один заход, находясь непосредственно перед некоторым
# кустом, собирает ягоды с этого куста и с двух соседних с ним.
# Напишите программу для нахождения максимального числа ягод, которое может
# собрать за один заход собирающий модуль, находясь перед некоторым кустом
# заданной во входном файле грядки


# 4 -> 1 2 3 4
# 9

import random
n = int(input("Введите колличество кустов: ")) 
 
numbers1 = [] 
 
for i in range(n): 
    number = random.randint(1, 10) 
    numbers1.append(number) 
 
print(numbers1) 
 
max_sum = 0 
max_sum_index = 0
for i in range(n): 
    sum = numbers1[i] + numbers1[(i-1)%n] + numbers1[(i+1)%n] 
    if sum > max_sum: 
        max_sum = sum 
        max_sum_index = i 
print("Максимальная сумма:", max_sum) 
print("Номера кустов с максимальной суммой:", max_sum_index % n, (max_sum_index+1) % n, (max_sum_index+2) % n)